"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const axios_1 = __importDefault(require("axios"));
const path_1 = require("path");
const shell_1 = require("./shell");
const fs_1 = require("./fs");
exports.default = {
    registry: (function () {
        const { code, stdout, stderr } = (0, shell_1.exec)('npm config get registry');
        if (!code) {
            return stdout.trim();
        }
        else {
            throw new Error(stderr);
        }
    })(),
    readPackageJson(filePath) {
        return (0, fs_1.readPackageJson)((0, path_1.join)(filePath, 'package.json'));
    },
    async getLatestVersion(packageName) {
        const { data } = await axios_1.default.get(`${this.registry}${packageName}`);
        return data['dist-tags'].latest;
    },
    async getCompressedPackageUrl(packageName, version) {
        const { data } = await axios_1.default.get(`${this.registry}${packageName}/${version}`);
        return data.dist.tarball;
    },
    async checkPackageValid(packageName, version) {
        try {
            const { data } = await axios_1.default.get(`${this.registry}${packageName}/${version}`);
            return !!data.template && !!data.template.main;
        }
        catch (error) {
            return false;
        }
    }
};
