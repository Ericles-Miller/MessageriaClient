"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
const npm_1 = __importDefault(require("../utils/npm"));
const fs_1 = require("../utils/fs");
const constants_1 = require("../utils/constants");
const utils_1 = require("../utils");
async function update(template = '') {
    if (!template) {
        return (0, utils_1.output)('Please enter [template] name');
    }
    const templatePath = (0, path_1.join)(constants_1.TEMPLATE_PATH, template);
    if (!(0, fs_1.isDirectory)(templatePath)) {
        return (0, utils_1.output)(`The [${template}] template does not exist locally`);
    }
    const latestVersion = await npm_1.default.getLatestVersion(template);
    const currentVersion = npm_1.default.readPackageJson(templatePath).version;
    const isUpdate = (0, utils_1.compareVersion)(currentVersion, latestVersion) === 1;
    if (isUpdate) {
        const url = await npm_1.default.getCompressedPackageUrl(template, latestVersion);
        const zipPath = await (0, utils_1.download)(url, constants_1.TMP_PATH);
        await (0, utils_1.unzip)(zipPath, templatePath, { override: true });
        (0, utils_1.output)(`The [${template}] template updated`);
    }
}
exports.default = update;
