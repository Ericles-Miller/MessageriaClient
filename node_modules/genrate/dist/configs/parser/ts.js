"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const templates_1 = __importDefault(require("../../templates"));
const utils_1 = require("../../utils");
function default_1({ ts, lib, framework, fvs }) {
    let files = [['tsconfig.json', templates_1.default.ts.node]];
    if (!ts) {
        return { files: [] };
    }
    if (lib) {
        files = [['tsconfig.json', templates_1.default.ts.lib.node]];
    }
    if (framework) {
        files = [['tsconfig.json', templates_1.default.ts.web]];
        if (['vue'].includes(framework)) {
            files = [['tsconfig.json', templates_1.default.ts.vue(fvs)]];
        }
        if (['nest'].includes(framework)) {
            files = [['tsconfig.json', templates_1.default.ts.node]];
        }
    }
    if (lib && framework) {
        files = [['tsconfig.json', templates_1.default.ts.lib.web]];
        if (['vue'].includes(framework)) {
            files =
                fvs === '2.x'
                    ? [['tsconfig.json', templates_1.default.ts.lib.vue(fvs)]]
                    : [
                        ['tsconfig.json', templates_1.default.ts.lib.vue(fvs)],
                        ['tsconfig.types.json', (0, utils_1.stringify)({ include: ['src/**/*'] })]
                    ];
        }
        if (['nest'].includes(framework)) {
            files = [['tsconfig.json', templates_1.default.ts.lib.node]];
        }
    }
    return {
        files,
        devDependencies: { typescript: '4.8.4' }
    };
}
exports.default = default_1;
